services:
  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./payment-service:/app
      - /app/node_modules
    command: npm run dev
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=secret
      - DB_NAME=payment_db
    depends_on:
      - mysql

  ui-service:
    build:
      context: ./ui-service
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./ui-service:/app
      - /app/node_modules
    command: npm run dev
    environment:
      - NODE_ENV=development

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: payment_db
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka

volumes:
  mysql_data:
